<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP xmlns="http://mcd.rou.st.com/modules.php?name=mcu" DBVersion="V4.0" Name="COMP" IncludeFile="stm32l1xx_ll_comp.h;stm32l1xx_ll_exti.h" Version="STM32Cube_FW_L1_V1.7.0" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd">


 <RefConfig Name="Comp_Init">
     
        <CallLibMethod Name="LL_COMP_Init">
           <MethodArg Name="PowerMode" ParameterName="Mode"/>
           <MethodArg Name="InputPlus" ParameterName="NonInvertingInput"/>
           <MethodArg Name="InputMinus" ParameterName="InvertingInput"/>
           <MethodArg Name="OutputSelection" ParameterName="Output"/>
           <MethodArg Name="COMPx" ParameterName="Instance"/>
        </CallLibMethod>  
        <CallLibMethod Name="LL_COMP_SetCommonWindowMode">
           <MethodArg Name="COMPxy_COMMON"> 
                <CallLibMethod Name="__LL_COMP_COMMON_INSTANCE">
                   <MethodArg Name="COMPx" ParameterName="Instance"/>
                </CallLibMethod>
           </MethodArg> 
        </CallLibMethod>
        <CallLibMethod Name="LL_COMP_SetInputPullingResistor">
           <MethodArg Name="InputPullingResistor" ParameterName="NonInvertingInputPull"/>
           <MethodArg Name="COMPx" ParameterName="Instance"/>
        </CallLibMethod>  




        <IFCondition Expression="(TriggerMode=COMP_TRIGGERMODE_NONE)">
            <CallLibMethod Name="LL_EXTI_DisableEvent_0_31">
              <MethodArg Name="ExtiLine" ParameterName="Instance"/>
            </CallLibMethod>
            <CallLibMethod Name="LL_EXTI_DisableIT_0_31">
              <MethodArg Name="ExtiLine" ParameterName="Instance"/>
            </CallLibMethod>
        <Else>      
             <IFCondition Expression="(TriggerMode=COMP_TRIGGERMODE_IT_RISING)|(TriggerMode=COMP_TRIGGERMODE_EVENT_RISING)">
                  <CallLibMethod Name="LL_EXTI_EnableRisingTrig_0_31">
                       <MethodArg Name="ExtiLine" ParameterName="Instance"/>
                  </CallLibMethod>    
                  <CallLibMethod Name="LL_EXTI_DisableFallingTrig_0_31">
                       <MethodArg Name="ExtiLine" ParameterName="Instance"/>
                  </CallLibMethod>      
             </IFCondition> 
             <IFCondition Expression="(TriggerMode=COMP_TRIGGERMODE_IT_FALLING)|(TriggerMode=COMP_TRIGGERMODE_EVENT_FALLING)">
                     <CallLibMethod Name="LL_EXTI_EnableFallingTrig_0_31">
                       <MethodArg Name="ExtiLine" ParameterName="Instance"/>
                     </CallLibMethod>    
                     <CallLibMethod Name="LL_EXTI_DisableRisingTrig_0_31">
                       <MethodArg Name="ExtiLine" ParameterName="Instance"/>
                     </CallLibMethod>      
             </IFCondition> 
             <IFCondition Expression="(TriggerMode=COMP_TRIGGERMODE_IT_RISING_FALLING)|(TriggerMode=COMP_TRIGGERMODE_EVENT_RISING_FALLING)">
                     <CallLibMethod Name="LL_EXTI_EnableFallingTrig_0_31">
                       <MethodArg Name="ExtiLine" ParameterName="Instance"/>
                     </CallLibMethod>    
                     <CallLibMethod Name="LL_EXTI_EnableRisingTrig_0_31">
                       <MethodArg Name="ExtiLine" ParameterName="Instance"/>
                     </CallLibMethod>      
             </IFCondition> 
             <CallLibMethod Name="LL_EXTI_ClearFlag_0_31">
                 <MethodArg Name="ExtiLine" ParameterName="Instance"/>
             </CallLibMethod>
             <IFCondition Expression="(TriggerMode=COMP_TRIGGERMODE_IT_RISING)|(TriggerMode=COMP_TRIGGERMODE_IT_FALLING)|(TriggerMode=COMP_TRIGGERMODE_IT_RISING_FALLING)">
                   <CallLibMethod Name="LL_EXTI_DisableEvent_0_31">
                     <MethodArg Name="ExtiLine" ParameterName="Instance"/>
                   </CallLibMethod>
                   <CallLibMethod Name="LL_EXTI_EnableIT_0_31">
                     <MethodArg Name="ExtiLine" ParameterName="Instance"/>
                   </CallLibMethod>
             </IFCondition> 
        </Else>      
       </IFCondition> 
</RefConfig>



    <LibMethod Comment="" Name="LL_EXTI_EnableEvent_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_DisableEvent_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_IsEnabledEvent_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_EnableFallingTrig_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_DisableFallingTrig_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_IsEnabledFallingTrig_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_IsActiveFlag_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_ReadFlag_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_ClearFlag_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_EnableIT_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_DisableIT_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_IsEnabledIT_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_EnableRisingTrig_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_DisableRisingTrig_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_IsEnabledRisingTrig_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_EXTI_GenerateSWI_0_31">
        <Argument AddressOf="false" GenericType="simple" Name="ExtiLine" OptimizationCondition="equal"/>
    </LibMethod>


    <LibMethod Comment="" Name="__LL_COMP_COMMON_INSTANCE">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>

    <LibMethod Comment="" Name="LL_COMP_SetCommonWindowMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPxy_COMMON" TypeName="COMP_Common_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="WindowMode" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetCommonWindowMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPxy_COMMON" TypeName="COMP_Common_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetInputPlus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="InputPlus" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetInputPlus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetInputMinus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="InputMinus" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetInputMinus">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetInputPullingResistor">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="InputPullingResistor" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetInputPullingResistor">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetPowerMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="PowerMode" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetPowerMode">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_SetOutputSelection">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="false" GenericType="simple" Name="OutputSelection" OptimizationCondition="equal"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_GetOutputSelection">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_DeInit">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_Init">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
        <Argument AddressOf="true" GenericType="struct" Name="COMP_InitStruct" TypeName="LL_COMP_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="PowerMode" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputPlus" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputMinus" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OutputSelection" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_StructInit">
        <Argument AddressOf="true" GenericType="struct" Name="COMP_InitStruct" TypeName="LL_COMP_InitTypeDef">
            <Argument AddressOf="false" GenericType="simple" Name="PowerMode" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputPlus" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="InputMinus" OptimizationCondition="equal"/>
            <Argument AddressOf="false" GenericType="simple" Name="OutputSelection" OptimizationCondition="equal"/>
        </Argument>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_Enable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_Disable">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_IsEnabled">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <LibMethod Comment="" Name="LL_COMP_ReadOutputLevel">
        <Argument AddressOf="false" GenericType="baseaddress" Name="COMPx" TypeName="COMP_TypeDef"/>
    </LibMethod>
    <RefComponent Cclass="LL" Cgroup="COMP" Cversion="1.7.0">
        <File Category="header" Name="Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_comp.h"/>
        <File Category="source" Name="Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_ll_comp.c"/>
        <File Category="header" Name="Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_ll_exti.h"/>
        <File Category="source" Name="Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_ll_exti.c"/>

    </RefComponent>
</IP>
